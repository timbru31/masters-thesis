%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.6 (Build 18G87) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1130 591
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1130 591
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: MRLCFB+Helvetica
%!FontType1-1.0: MRLCFB+Helvetica 1.0000.0.0000
14 dict begin/FontName /MRLCFB+Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /U put
dup 34 /s put
dup 35 /e put
dup 36 /r put
dup 37 /space put
dup 38 /i put
dup 39 /n put
dup 40 /t put
dup 41 /a put
dup 42 /c put
dup 43 /w put
dup 44 /h put
dup 45 /o put
dup 46 /B put
dup 47 /m put
dup 48 /p put
dup 49 /l put
dup 50 /x put
dup 51 /d put
dup 52 /T put
dup 53 /f put
dup 54 /E put
dup 55 /C put
dup 56 /b put
dup 57 /comma put
dup 58 /v put
dup 59 /u put
dup 60 /I put
dup 61 /fi put
dup 62 /g put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<








24572766246726790C790D790E7623742474257426A61EA82C1303000B15052D042E13001A151B171C18152D142E280F0B6908262536250225220D0A042B1318C61C1D1307041D2E9A2B0B2F07090E100207002F212F1A1F18161827173E28260727281A310E1F27103E00272E193031B221A65D182B2B4EF44DEDF4FD394E10F64DFD3910F4FD3911123939392F111239113939003F3FEDED3FEDED111217397131304379404C012D022615251A26210E1F21000926072101032C002100052A0721011D121F21001B14182101200F22210021220E0D08270A21012625090A012D04210006290421001E111C210119161C2101002B2B2B2B103C103C2B103C103C2B012B2B2B2B2B2B2B2B2B81005D5D015D13161716333236353427262F01262726353436333217160723262726232206151417161F011617161514062322262701EF082544A864983D27738F894174DBB9F26B4302AA05263E99666945284E77C24269D9DEEFC70701B701505A3057575B4524161D24222A498198BC8E5A683D32474E40462A19131D2F2C45948FD0D9A002F900010017FFEF0209055A00180052B50D2E0AC00E01B8013F40250416391703060E0A111A17171A0301062900150E150F031F030203FC1619191AFC21677D182B2B4EF44DFD5D39C42F3CFD3C104E456544E6002F3F3F3C4DFD3CED10FDE431301333113315231114171633323637150E012322263511233533A8B6ABAB2615310D1E141F43277E5A9191055AFED593FD4538130B01028E0908816702C593000000020080FFE303DE044900170018005E403AB814C81402091308141913191428067703D707070800050E0A00060D0A051D120B180718180B160D2E0A290C0B1A1A01291619191AD2216242182B2B4EF44DED4E10F63C4DFDE41112392F003F3FED3F3F3C391112393130005D015D0111141716333237363511331123370607062322272635112501381A3083BC4425B4AA0223346793E5532D01AF042FFD39523460A85A9D020EFBD19E3D2A5499528902D81A000001000B000003EA042F00060102402E4201C5010200670068026803670687048805A700A802084700480245044A0586048905C704C80508492873280708B80109B321677E182B2B4B5279B8FF70B40105042004B80183B703036D1202010205B80183401E06066D120000010506040301010502030603000605040A0817171A03AF02BA018400000184B301AF0619194EF4184DFDE0E0FD194E456544E618003F3C3F173C1239011112391239074D2E2B104EE44D072E2B104EE44D2B4B51794025022912030304002912060605010502030603000605040A0817171A020403AF050001AF0619194EF4184DFD3939FD3939194E456544E618003F3C3F173C12390507102B07102B313001715D005D7113090133012301DC


00>] def
/CharStrings 32 dict dup begin
/.notdef 0 def
/space 1 def
/comma 2 def
/B 3 def
/C 4 def
/E 5 def
/I 6 def
/T 7 def
/U 8 def
/a 9 def
/b 10 def
/c 11 def
/d 12 def
/e 13 def
/f 14 def
/g 15 def
/h 16 def
/i 17 def
/l 18 def
/m 19 def
/n 20 def
/o 21 def
/p 22 def
/r 23 def
/s 24 def
/t 25 def
/u 26 def
/v 27 def
/w 28 def
/x 29 def
/fi 30 def
/u20B8 31 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1947 -985 2961 2297}def
/UniqueID 4179358 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C931313987B77B87D3A530FEA8139219B56B58888BA339BA81F732C172FBF585D9C7376EE32D90479D715F9C9EC97035FF516FFB995A6BAAE13CF67B2813334C87B441210658FB7C257D257266613EBDB6ABCE71AA266E84148EE4A0DF14E888464FBFF557FFE143D3B414EEDCF15CA89917A9C0C54A4E58CBC38D53F5A610639283F2A10B2B85305960EB81069A27FA27EBB118337187C3831CD152B93BE91767B2EB2A94BF12F1ADD4A3779AFDF4E4FC24B381D549C6590087B32C4BC7D3E9B58F1852DFA8CC5B4B1CF761B729B6EB02B45040109CB40FA882BB1F760FD89DBEAB9974BDD67E09DDA21DA9EED83E4569E94BD885945E92CC25EAD6A8EE32F4FF699D91A59067A991467C78707CD83B004083A43280F78CBADFC401701C5035E61265A60462454D56672FB949A5C49B4E6F10CBCF85B4F66D02B954CEF500A25014325A42DA4712A5E6B95D763DFA82DE9436771F25FF49AF7C5C950BF36BC22126C2867D9F3C30940DAAD03B9E814BE135683E2C0B6FD4A29B01BE84FCA223444858985742DA7315A92169A80E4BE4C18BD599CCA005BDF9929C45C939A163ED52EAA533E19C91E8F8EDC9B13CF8FA7EA9A277D94A1BBE82C4E538D77F7B676EF2053B5C2FCAB48E8FDA446744C24D3CF2690A0486F4B493B92FD487412294F016F3E2D25560800BDB21AAB2AF5D893383C307353061CC201432D7E42687905CC8C6C71386482D5F669AEEA877F77DAA136846B9EC2B46ED8E9A87C9DC956275D
B4487F8C08F1FE5BC4FF16F18EBE87C399729B53B6F803B2FA321311467B013CB518F61D0DEBD28BA4C9AFE470F63264B4892BDB84BFED8B5BD675E000D3E4CD872C184CC1A9D0114CF8E60B72FD077087B34389AFB8A8C5495327537AF662EA2CB0FE214955FAC06727BA49D384E96B1A09AD328D0E2C5CF497EEA73C3E3C904B36B4833FD67D529A40A33EA29CD61EE06F1B6F75ED9D264E154CA8559AFB6951399C730364E4E1325E8965AFE3C1EC21508DC57EF8743B33EA7212A11423E444BC6902C9885359956C32E180BAFAF3FC516BD34EC6E6C01AC6998AB1223B2E0D3E77C15F2C28860F9274849F478C46A6F686A61AA563C12DDC16531DF0EE45E6F48E15A4865814C472F717F5C613020C7B88499F8BCDD12A1D26C95900EEE41F3648299E5443ED1E2A693B5926B34057A210930FBC8E258B049FD13C2FEA933C06257C9E1C8245B9A6BA439E93999028CA1812835C4ECA8FB955DEEF598B8567B09C481CD289364558B7FADC51A1F17A9FE9B7F96BA89BBB893E804DC41380EB8D02C820B7532132F12A14084A0143F7A14CB87B3234378D355AA62BCDB7C07B84930A0181056768DB097FD229BD78690168EF95B3FDC5FE892835DEC3639B287DA45BBA561070BFEF791E8D1C901862670DCA3A8684173B216F5CFB8DD5EB21CC99552B5C5551F9C46B145BE1997E479146E373C2DBB43AE1752F0D3D94B1AE66B7EDA548A7B02FD3CDD1C30443494CF0EAA55CB7AFE3F1A5470AE803F78524E4499E14E0180F7F8BECDA3BFC8144A833D78C74126FD50AD7EB3DE0947AAE4FB31922EB7B5C8369063FE41300093A788E0130AB7994CED6C1451610C26A994CD717CD2CE2963F3D6D659EFA641CF9EBAE5FC9EB0D909FA9A4DA92D732FB87E95FB5E04ED085718F7708616A610B968F1DAD50246336851AB4CA277ADF201F3A6EA7C93FF9BC990418145848FA697403279B004D8C30BADA075BA9C793EBE19CBFAAF9167D1417D29CE30AFB557E8212BEE60543800FFCA4CB0B3C8C8933A0163E703DE1F3D81BD26D2940C66165B913A322D536C2FCFE9CA8762A87EE07CF0ADEFE5CBC200578592101BCD28BE9F79D21B152D8765AB76B710F0F493C775E976B5B076BA9BE06197BE839C9F0FDAB1129F031312820B9D3197478A9949C51452B967E6DD4801C227604D5906CD8280AECF4D1B7DBF3FDE8276B78BE0FC4A3E550D37B5C0E069BC5C2BD886CAF6FF4CBE3D80D45CCEF0F6B5DBD3D5A14E594E64813F480553515848D28223FA8B344EFAF997C7C422F5E9250F3A4F8CFB6DB547E48D44E6F72D4EA974D58E93F2E2D5550DC59F3ACE04D43D62B9519E4E6CBF4B90FC70730E95028908B067B2DC26307204F8ECF37F28C16023756EF22201009AED61F1904F10B5883CEF9E847FA07793BEB1048EAE665E05E1E662FF43867


4564D4960A5A8798A8B764AC372A60A92F62A9002514F8B6EB09F98375D3D09ECCE283B904488A04F7A2067769C8F51DB3850B213F204DADE8AD2678272D535B5616D553D4EAC2EA131CD91500B795FB149767718E142B121E3DF32CC96D0B6A71D589C9D34793CE784BFDEBDEC973D5FA91EAC710B47DDDFD2F2BE49EDB53067887B1736E54355F1C864B7EC18A898C91A5A20308E0288D12A1557D54667D89A02E6F601F1F79EDE3A73469A4E0C986878E9C38B9BC4383BB929A4E42CD82D734351E211D7B67078D31CCCB3D5932956DEF70CC98125F91A15B8F00F7ED4EB023432B49BB065C53805C370B98FBC4D3EE65512F1B3BF28DAD2320C6DA2D07FECDF41A7C459E16F9A43C5E3942F0A26319876EEA51F2FFAB678300ECA234A4A49A118595D9E6F9604CA9105F928371A2726B5865C54126F5845A27D90F9D8A22DD29787091E12933EE4F2C1AF69BE1B4AE7E71D10170FE7E1719D27908069BFAE17D46C7ED69C449F85657B22EC2C7F12745C7F1D27D1EFF16312E8D25F90DAB5616D733A67D566049B2309A1D169DAE42D3D8BC8F75365CD27BFCD0CBDF3773E41847D557F0D21D6B52914DC045A5DBDB4BBF503CE66E08A610D5C810468EE12B2A09FB0E852FDC31089795DB583F451F35D2FC564AFADA2ADCB0AFD2F3A726C7DD4D85644C2C2CFEE490C7113E04690CC55B2901E83B3F426BD4D480097DE1C4F7257053CD0326951D40
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/MRLCFB+Helvetica cguidfix
/F1.1/MRLCFB+Helvetica renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0 0 0 sc
q
792.59259 591 m
752.59259 591 l
747.06976 591 742.59259 586.52283 742.59259 581 c
742.59259 501 l
742.59259 495.47714 747.06976 491 752.59259 491 c
812.59259 491 l
818.11542 491 822.59259 495.47714 822.59259 501 c
822.59259 561 l
792.59259 591 l
792.59259 591 l
h
812.59259 501 m
752.59259 501 l
752.59259 581 l
787.59259 581 l
787.59259 556 l
812.59259 556 l
812.59259 501 l
h
W
0 0 1130 591 rc
737.59259 596 m
827.59259 596 l
827.59259 486 l
737.59259 486 l
h
f
Q
q
577.59259 556 m
577.59259 583.5 l
605.09259 556 l
577.59259 556 l
h
542.59259 591 m
537.0426 591 532.59259 586.54999 532.59259 581 c
532.59259 501 l
532.59259 495.47714 537.06976 491 542.59259 491 c
602.59259 491 l
608.11542 491 612.59259 495.47714 612.59259 501 c
612.59259 561 l
582.59259 591 l
542.59259 591 l
h
W
0 0 1130 591 rc
527.59259 596 m
617.59259 596 l
617.59259 486 l
527.59259 486 l
h
f
Q
q
673.90912 115.81818 m
660.27271 115.81818 l
678.45453 134 l
696.63635 115.81818 l
683 115.81818 l
683 95.681816 l
679.59088 93.590912 676.54547 91 673.90912 88 c
673.90912 115.81818 l
673.90912 115.81818 l
h
723.90912 88.545456 m
705.72729 106.72727 l
705.72729 93.090912 l
689.31818 93.772728 675.31818 81.409088 673.90912 65.045456 c
666.81818 62.545456 663.09088 54.727272 665.59088 47.636364 c
668.09088 40.545456 675.90912 36.81818 683 39.31818 c
690.09088 41.863636 693.81818 49.636364 691.31818 56.727272 c
689.95453 60.636364 686.86365 63.68182 683 65.045456 c
685.13635 83.227272 703.31818 84.13636 705.5 84.13636 c
705.5 70.5 l
723.90912 88.545456 l
723.90912 88.545456 l
h
672.22729 85.86364 m
666.18182 90.5 658.77271 93.090912 651.18182 93.090912 c
651.18182 106.72727 l
633 88.545456 l
651.18182 70.36364 l
651.18182 84 l
657.27271 83.86364 663.13635 81.727272 667.72729 77.63636 c
668.86365 80.545456 670.36365 83.318184 672.22729 85.86364 c
h
W
0 0 1130 591 rc
628 139 m
728.90912 139 l
728.90912 33.540516 l
628 33.540516 l
h
f
Q
q
429 138 m
442.80713 138 454 126.80712 454 113 c
454 99.192879 442.80713 88 429 88 c
415.19287 88 404 99.192879 404 113 c
404 126.80712 415.19287 138 429 138 c
429 138 l
h
429 75.5 m
456.625 75.5 479 64.3125 479 50.5 c
479 38 l
379 38 l
379 50.5 l
379 64.3125 401.375 75.5 429 75.5 c
429 75.5 l
h
491.5 88 m
491.5 119.25 l
504 119.25 l
504 88 l
491.5 88 l
491.5 88 l
h
491.5 63 m
491.5 75.5 l
504 75.5 l
504 63 l
491.5 63 l
h
W
0 0 1130 591 rc
374 143 m
509 143 l
509 33 l
374 33 l
h
f
Q
q
959.47058 88 m
967.70587 79.705879 l
929.29413 40.941177 l
908.88232 61.529411 l
917.11768 69.823532 l
929.29413 57.588234 l
959.47058 88 l
959.47058 88 l
h
894.17645 61.529411 m
911.82355 43.882355 l
853 43.882355 l
853 55.64706 l
853 68.647057 874.05884 79.176468 900.05884 79.176468 c
911.17645 78.529411 l
894.17645 61.529411 l
894.17645 61.529411 l
h
900.05884 138 m
913.05377 138 923.58826 127.46552 923.58826 114.47059 c
923.58826 101.47565 913.05377 90.941177 900.05884 90.941177 c
887.0639 90.941177 876.52942 101.47565 876.52942 114.47059 c
876.52942 127.46552 887.0639 138 900.05884 138 c
h
W
0 0 1130 591 rc
848 143 m
972.70587 143 l
972.70587 35.941177 l
848 35.941177 l
h
f
Q
q
669.66669 350 m
648.83331 350 l
644.25 350 640.5 346.25 640.5 341.66666 c
640.5 283.33334 l
640.5 278.75 644.25 275 648.83331 275 c
669.66669 275 l
669.66669 266.66666 l
678 266.66666 l
678 358.33334 l
669.66669 358.33334 l
669.66669 350 l
h
669.66669 287.5 m
648.83331 287.5 l
669.66669 312.5 l
669.66669 287.5 l
h
707.16669 350 m
686.33331 350 l
686.33331 341.66666 l
707.16669 341.66666 l
707.16669 287.5 l
686.33331 312.5 l
686.33331 275 l
707.16669 275 l
711.75 275 715.5 278.75 715.5 283.33334 c
715.5 341.66666 l
715.5 346.25 711.75 350 707.16669 350 c
h
W
0 0 1130 591 rc
635.5 363.33334 m
720.5 363.33334 l
720.5 261.66666 l
635.5 261.66666 l
h
f
Q
q
295.30664 572.375 m
294.99792 572.375 294.68921 572.45831 294.4191 572.625 c
287.01019 576.75 280.60455 578.5 272.92551 578.5 c
265.28506 578.5 258.03049 576.54169 251.43192 572.625 c
250.5058 572.08331 249.34816 572.45831 248.80792 573.45831 c
248.30627 574.45831 248.65356 575.75 249.57968 576.29169 c
256.75708 580.5 264.62906 582.66669 272.92551 582.66669 c
281.14478 582.66669 288.32217 580.70831 296.19415 576.33331 c
297.15887 575.79169 297.50616 574.54169 297.00452 573.54169 c
296.65723 572.79169 296.00122 572.375 295.30664 572.375 c
295.30664 572.375 l
h
240.08701 550.5 m
239.70113 550.5 239.31523 550.625 238.96794 550.875 c
238.08041 551.54169 237.88748 552.83331 238.50488 553.79169 c
242.32512 559.625 247.18723 564.20831 252.97543 567.41669 c
265.0921 574.16669 280.60455 574.20831 292.75983 567.45831 c
298.54803 564.25 303.41013 559.70831 307.23038 553.91669 c
307.84778 553 307.65485 551.66669 306.7673 551 c
305.87979 550.33331 304.68356 550.54169 304.06613 551.5 c
300.5932 556.75 296.19415 560.875 290.98477 563.75 c
279.90997 569.875 265.74811 569.875 254.7119 563.70831 c
249.46391 560.79169 245.06487 556.625 241.59193 551.375 c
241.28323 550.79169 240.70441 550.5 240.08701 550.5 c
240.08701 550.5 l
h
264.20459 500.20834 m
263.70294 500.20834 263.20129 500.41666 262.854 500.83334 c
259.49683 504.45834 257.6832 506.79166 255.09779 511.83334 c
252.43521 516.95831 251.04604 523.20831 251.04604 529.91669 c
251.04604 542.29169 260.84741 552.375 272.88693 552.375 c
284.92642 552.375 294.72781 542.29169 294.72781 529.91669 c
294.72781 528.75 293.87888 527.83331 292.7984 527.83331 c
291.71793 527.83331 290.86899 528.75 290.86899 529.91669 c
290.86899 540 282.80408 548.20831 272.88693 548.20831 c
262.96976 548.20831 254.90485 540 254.90485 529.91669 c
254.90485 523.91669 256.13968 518.375 258.49353 513.875 c
260.9632 509.08334 262.66107 507.04166 265.63235 503.79166 c
266.36554 502.95834 266.36554 501.66666 265.63235 500.83334 c
265.20789 500.41666 264.70624 500.20834 264.20459 500.20834 c
h
291.87228 507.91666 m
287.2803 507.91666 283.22855 509.16666 279.90997 511.625 c
274.16034 515.83331 270.72598 522.66669 270.72598 529.91669 c
270.72598 531.08331 271.57492 532 272.6554 532 c
273.73587 532 274.58481 531.08331 274.58481 529.91669 c
274.58481 524.04169 277.36316 518.5 282.07089 515.08331 c
284.81067 513.08331 288.01346 512.125 291.87228 512.125 c
292.7984 512.125 294.34192 512.25 295.88547 512.54169 c
296.92734 512.75 297.93063 512 298.12357 510.83334 c
298.3165 509.70834 297.62192 508.625 296.54144 508.41666 c
294.34192 507.95834 292.41251 507.91666 291.87228 507.91666 c
291.87228 507.91666 l
h
284.11606 499.33334 m
283.96173 499.33334 283.76877 499.375 283.61441 499.41666 c
277.47891 501.25 273.46573 503.70834 269.25964 508.16666 c
263.8573 513.95831 260.88602 521.66669 260.88602 529.91669 c
260.88602 536.66669 266.21118 542.16669 272.77115 542.16669 c
279.33115 542.16669 284.65631 536.66669 284.65631 529.91669 c
284.65631 525.45831 288.245 521.83331 292.68265 521.83331 c
297.12027 521.83331 300.70898 525.45831 300.70898 529.91669 c
300.70898 545.625 288.16782 558.375 272.73257 558.375 c
261.77353 558.375 251.74062 551.79169 247.2258 541.58331 c
245.72087 538.20831 244.94911 534.25 244.94911 529.91669 c
244.94911 526.66669 245.21922 521.54169 247.53452 514.875 c
247.92039 513.79169 247.41875 512.58331 246.41545 512.20831 c
245.41217 511.79166 244.29311 512.375 243.94582 513.41669 c
242.05499 518.875 241.12888 524.29169 241.12888 529.91669 c
241.12888 534.91669 242.0164 539.45831 243.75287 543.41669 c
248.8851 555.04169 260.26859 562.58331 272.73257 562.58331 c
290.29016 562.58331 304.56778 547.95831 304.56778 529.95831 c
304.56778 523.20831 299.24261 517.70831 292.68265 517.70831 c
286.12265 517.70831 280.79749 523.20831 280.79749 529.95831 c
280.79749 534.41669 277.2088 538.04169 272.77115 538.04169 c
268.33353 538.04169 264.74481 534.41669 264.74481 529.95831 c
264.74481 522.83331 267.29163 516.16669 271.96082 511.16666 c
275.62668 507.25 279.13821 505.08334 284.57913 503.45834 c
285.621 503.16666 286.19983 502 285.92972 500.91666 c
285.73679 499.95834 284.92642 499.33334 284.11606 499.33334 c
284.11606 499.33334 l
h
W
0 0 1130 591 rc
233.1454 587.66669 m
312.58984 587.66669 l
312.58984 494.33334 l
233.1454 494.33334 l
h
f
Q
q
0 0 1130 591 rc
64 0 0 88 16 491 cm
save
576 24 cg_miaiproc 
227 -37 -32{
gsave 1 192 div 1 264 div scale 0 exch translate
currentfile 0 (EOD
)/SubFileDecode filter
L3?{flushfile}{cvx exec}ifelse
192 38 scale
BI
/Width 192
/Height 38
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/DataSource ImageDataSource
/MaskedImage true
ID
EI
grestore} bind for
0 37 m 0 0 l 192 0 l 192 37 l h W n EOD
JcC<$JcC<$WW22_JcG9?WrN(rroO.&rj)NjrdXoYr_*5GrZhD'r`&l6reLKHrjr*YrpGgHJcF-tklAj*
JcF^/rq68praGd]rYYV9c2dhLrZV8'rd=^grr2]mJcC<$q>][ZJcE%Urp'KRr_EG!quF,)rYtiNrj_t'
JcFF'U&X?WJcGQG_uK_irepb<rW8YkrXJj-rh]V_])R?]aoCT*dJndto`+pSrd+PmQN6UWrWN3frg`ub
JcD5>nc.hRJcEmmrpp&;rX7rjOoYJ.riC\NpA^Q\kl?;7d/X+Arfd<rJH5*<r\shmeGk+"_>ia"g&HX'
rr;usri#f@N<%N0r_*7>JcE%Ul2TuJJcFF'rk8:ehZ/3-qZ-Tsra>`bOT1ICkl?S?fDkj"r^VM>blI_K
rcS53mf.k<\c:moiW"N0riH),L&esgr[n-,JcEjliW&-BJcFs6rr2nIrW1aRJH4a2rY5@JV#Q;Okl?kG
g].9Gr`"FK[/g10rg<fes+13Ts60OJs+^RQiVkN_!36,!D#X<_s5!_.s60N7s7--g`;UP(!.b-s!<,=a
mC<1Is60NOs4mYRSc/hE!3?1n!<+5BeUdb4s60ORs+gXRF+F>j!1Eoe%fX%js6fp7s60N7s8)cpM:2HU
!5AO5%0"\ss+14Gs60NWs5!_S[/L,X!36+\!<+,?l[f)Ss60OZs+p^Sec$#/!!!"U!<,1]qLSYIs8U4@
kl?A9rp9V.eGt.#XoSH3fDgF%nc.hRWW1iTrql[[JH2\MdfBB0JcEmmkl?J<rb-i_!<<+N!;ccq"9,lk
s2"a"!/^aTPgf\a!2'>k&H:AHs+147s60Ngs4mYR^&A.c!3?1>!<+AFmt(Mfs7$*b!0@0Zp&5kg!<*3%
/,hp;?=!V<rcnF*ri?%0rhKILrbqd:r]L0%M#dNdS,^&!kl?eEre8o']`A$Ar`K/trpe_BrnRL4r]U5_
PlUdcrn$lDJcF^/klA9ogAh0<rXPCtrXJjArji%)aT)8*rh'0^iW-Ffr_J+Ff)POGnGnaPrbnA.rWW:<
rp&tPaT)7]r]ckPrktf9Z2a%gQ2gj?rW_*WaoMDAr`K0UWrN(*r[a`Cr]5W1g&L::_>i'cr`Q#sr\jc"
U&Y,jrh'0%quE\rri^nQh#HU=R/d01rW/nsra5["kl7pfrn@?"VZ?]Erqj2)WW22_R/d.Qh#P_#rW<(X
O8o4Kr^a<pp&P)ZJcFX-klAj*e,TEWWW<#/rjImfqu?Zorc>(>rYb_-JcG$8q>][ZS,`IBXT8>9rn$62
ScA\UWW<$Q_Z->0kl@=Trmos,cN*qKrksBfqZ$P<_Z9!&r[WR"irA6CdJqMlre@NTrgo/MlMpk^r_0Eo
rnN))p&FR^J,
~> 0 38 m 0 0 l 192 0 l 192 38 l h W n EOD
kl@=Tre@NTrgq^@UAt5kr_0EornP3eWW22_T)\dKf)XM)rc5dRrql]Urmq)9^]4<(r[Yebn,WHHJcFj3
klAj*g&M'6rW0>*r^m+fbQ%Rhrdk&.rYPP8p]19urZM27rg`uPi;`0Drn[PeZN0tfJcG-;q>][ZU&Y+Z
ZN0t8rp8;;p](5^rZL"srW<'_rm/mirhm(&rWE/caT%t6kl@FWr^klFfDto,dJs4+r^Y?9rWW:Orqk4F
rr2mRcN*&,rgn]@kl9lIdJq_rrpp$n[K-:HrqFqBrh'0#a8l2ormLQ@hZ*ShZN0u#JcGNFnc.hRV#UFo
ZN0urgAh0ProO,P^B"6;re1:JfDkhA[K-:5rq=h@RK)LOV#UEui;hF/r[e'IgAh0#rXlR=r]^>YgAh0#
rW:mUg&V,VJcG'9klBE:ci="ArXcL<ri=cQrqcUKZiL%)rdi]$r`6H-raCHZl2TuJVuQb>[K-:6rq>7L
r;ZbGXT8>(rm0<uriEO.rZU%rOoOYGVuQb#joEd/r_V>Krm(KGWW<#NrqYCMrq$*okQ'$2rW[rRli62L
iW$surg'tmrh/*IrqZOF[K,arrd3B!r_'["rp,UEiW&-BVuQaD\H)U2rp8_GqZ$P?T`G&prlX'srgL7q
rmKs/M>uf?VuQa*mJtH2r]o<>rnm\WScJaLh>dK<rW;Zk`rQ+KJcG0<klBuJ^]4:)\H)V]h>dJ7\,bIf
ro;i7r[t_]rgoGUg&L::VuQ`L\H)W%l2UGVr]cbMrfl7=r_'d%re0_>JcFs7VuQ`2p&N#2rjq%frp9Ud
QiR+Sh>dIbqZ+A2rbI)bmf2MOnc-3#rqcTp\H)WYi;`eo]`?^crYXJkrdMBXr_]9edJrG2WrN(X[K-<p
nc/+Yri)._rW<)si;`eD\H)UfpA]^Dq>][ZWrN(>qZ+A2rWq?[rf<3BroE#;!3uX2ZFKu7*J+7Ys60OZ
s0D\(Z+0l6+Pm(sGJsR-!<14#s8L0O!<*2"s2k<*!36(u\@DV=-2.B&s8I#$!<1$ss8LBU!<*H,s+14?
s60N`rrC+@aN1mlr[$D#rc+)$rl=4%qZ$QA\H)ULJcG0<kl@a`rn+a]r[$D#rc-0_`W6"Yi;`f'\H)U]
Y5c?<kl@a`roglmr[%RDi;`drOoYL%i;`f'])Vj3!<,05s6fpO!3uS#s8Mi)!<+;#s8I#$!<1%-s763h
d('/U:4`H5s7$*b!2okr$+p9;-/JV#ERb''!<1$ss8LBU!<-<5s1/0o!2okr)86(O!!*!Eh>dIoOoYL%
i;`f'_Z9E2rbmAfmf2MO\c;-ur][spr[$D#rc+)$rl=d5lMpk1\H)VmJcG0<q#KpbVuQa7]E%pWh>dIo
h#Ok`rl<ssrm81UrkuPNZ2a%gVuQah`W5`5r[$D#rc+)$rl<ssrm8ggnc8Xjrpt^@mf2MO_>i]urmA@Y
r[$D#rc+)$rl5'>s5O(Xd(BAX-@u3_s60N]s8Mop#JU9<-/JV#ETI2'!<1$ss8LBX!<-';s/H%_!2TYo
1XQ3k!<+;#s8I#$!<1$ss8LBo!9sR`M1P]ms60O*s4mYRA\S6E-/JV#EKpP'!<1$ss8LBX!<0Q\s7?9d
s60NZs8K+7!<+;#s8I$*!2]bqa5I!sd(]S[$i]kCs.TJW!2TYop&5<R!9X@]-/JV#EKU>$a5I!sd+\Q^
!<,uLs60LI!7Chos8Gs6!<+;#s8I#/!;6Ela5I!sd(]S[WIb*Es7-,>
~> 0 38 m 0 0 l 192 0 l 192 38 l h W n EOD
kl@FWr_pZ6r[$D#rc.$"XoSIAi;`f'^B"84_#LD6kl@FWrhn6Gmf<>5h>dIoOoYL%i;`f'dfAk;rWrMp
JcFs6klAj*g&M'BrWgCBr[$D#rc+2'rW)r<i;`f'_>sR2JcG-;q>][ZT)\db`;ol`h>dIom/X!`rl<ss
rm8L^rhII4U&X?WT)\eehZ2g>r[$D#rc+)$rl<ssrm9C"lN$nlrpYL=jo=QFdJqMlrql[:a8l2ch>dIo
SH/?`rl<ssrm8Uarc!Ggo)J7[kl@4QrfbD'r[$D#rc.T2ScJc1i;`f'a8l2Cro;0$RK)LOS,`K]rY=f#
hZ3X%h>dIoOoYL%i;`f'irJ3AraCBXhuDp@g&Jkfre/Gpr[$D#rc+b7mK!7,i;`f'b5hMBrmu`$p]'LX
kl@+NrpTgqc2dhih>dIor;`,`rl<ssrm8ggr_^o>OoOYGQ2gi-p]/nGr[$D#rc+)$rl<ssrm9s2j8f/[
rl]lmh#HU=iW$=crq?=?d/a.lh>dIoXT7J`rl<ssrm8pjrcNelq>]FRkl?nHrm:WLe,]IohZ!TUrc+)$
rl<ssrm9$mr\FKKdJo('kl?kG!WW3!O441/-/JV#EKU>$a5I!sd.77s!<*B*fn'1Ss60OJs/5nrrr,F>
!<+;#s8I#G!8[_Ta5I!sd*r'pRt:V:s4RG:!0$sWkPc4M!<+;,s7lWnEKU>$a5I!sd+89s;pbPqs60NO
s7--g[+YNZ-/JV#EKU>$a5I!sd/*h$!<*u;mXbDbs60ORs-E]aCu#*j-/JV#EP2A'!<1$ss8LC$!<*'!
^OcF`s3^l2!/COQp\l`%!<+;4s7$'fEKU>$a5I!sd+n^$H.)_Ds7u]Z!29GQs8LLH#ibpa-/JV#EKU>$
a5HstciMM?huNa6rqh9Hb5^]+q>Z9Nrfc@Br[$D#rc,mWc2djai;`f'irK&ernE#(!WW2As60N7s8Dus
:?DQU-2.B&s8I#$!<1$ss8LC*!</_Bs+14?s60N_s4./Kq>OX`!<+;#s8I#$!<1%%s8)cpd-1Q0#6(BK
s2"a"!.k1Es8IN7!<+;#s8I#_!6,$<a5I!sd-Lc3'E5k"s8N&7s60N7s7H?jU](Jg!<+;Ds5<qVEKU>$
a5I!sd-gu6-2uWIs+147s60Ngs2"a7_Yt5A!<+;#s8I#$!<1%-s763hd..294oXi"s1&+!!;QVGs6fpd
gAWDn!<+;#s8I#g!58I4a5I!sd.ID<>lOPMs8Du.s60N7s6K^amJ]<J!!*'"r[$D#rc+)$rl<ssrm:E?
rd`>pJcF^/klA9oYlF^ur`oF&r[$D#rc+)$rl=d5lMpk1rW)p&rhP,FXT/(rnGn.?irB".r[-J$rc-`o
[K-<Ii;`f'rY,:JJcGQGZ2a%gJcG!7p](6-h>dIoOoYL%i;`f;rnG`uJcFF'klAR"JcGNFrc+)$rl5'>
s+13$s60N7s1&+.ETI2'!<1#is4@:Ms60N7s7--1s8I#$!<1$Bs+13ts60O*s+14>s8I#'!<)uta+=8G
s7u]Z!.k0[s8I$*!2]bqa+=9Js.TJW!.k1Gs1n[6EKU>$a1))"s2k<*!7Cgts60L^ELd+'!<1#is,[3M
s*t
~> 0 38 m 0 0 l 192 0 l 192 38 l h W n EOD
kl?;7\GuPJjT)F`rl9TifDhiMkl?;7nc-]1rc+)$rl;5BJcF-tklAj*JcG6>rc+2'rW)r<JcCN*q>][Z
JcE7[rc.<*V?$V9JcFX-U&X?WJcGQG_#OCROoYL%\,V$ZaoCT*dJndtkl:X%SH/?`rl9TiO8nbMkl?;7
\GuPJo`1Q`rl9TikPptMkl?;7\GuPJOoYL%^]/lb_>ia"g&HX'i;`drV#]o`rl9TiQiH=Mkl?;7\GuPJ
r;`,`rl9Tin,JOMkl?S?YlF]BOoYL%a8^_j\c:moiW"K/f`1qjXT7J`rl9TiTE!mMkl?;7\c2[0rc+)$
rl9Tip]$*Mkl?kGW;lj:OoYL%ci8RrZ2a%gl2Q>7d/X)b[/f%`rl9TiVuPHMkl?;7_>j<1rc+)$rl9Ti
!WW1Ns60NOs.KDkEKU>$a4L?Bs/H%_!:g)?s2b6>EP2A'!<1#is0)IMs60N7s2k<1s8I#$!<1#os+14G
s60NWs-WicEKU>$a5?oJs.TJW!;ZYGs1n[6EQ%q'!<1#is0r$Ms60N7s3^l1s8I#$!<1$"s+14?s60N_
s,d9[EKU>$$g/!"%fRXN48r7ZIK%Cgrdk*Ns60N7s1&+.EQnKO!<*o9D>rFDs763+s60N7s4RG1s8I"h
!8deU"o`*4hU):Rs69RJ!3uQ[s8I"h!;uoR!<*-#A,b87s1\O'!;QVGs1&+.ERb&?!!*'"rWN4/rnED3
\c:moJcF^/f`1qjJH3pprWE.,rn?Z;JcF^/klA9oJc>`Mrc*Vl_Z9Z<ra,TWJcF*sq#KpbJcE7[rc-`o
JH4d3rW<((rn"%IZ2a%gJcG!7d/X)bJH3:^rW<(&rmlZ#h#HU=_>f)dq#C>5N<#pXrW<($rmZN!irA6C
JcE7[rc.$"JH3jnrW3""rmS[_WW22_JcG9?aT)6ZJH3@`m/[+dr`/sGJcG0<klAj*JcG6>rc+2'Nr].[
r_rgCJcGZJq>][ZJcE7[rc.<*JH2qTrW3!qrm0<uU&X?WJcGQG_#OCRJH3XhciF&Arlp#o!<;9`dJndt
kl:X%SH+3@nc8Yarlg].nc++
~> 0 38 m 0 0 l 192 0 l 192 38 l h W n EOD
kl?;7\GuPJjT'i3WW<#nrlj7!WW22_JcG9?aT)6ZJH3@`bQ.W9rlU3"klAj*JcG6>rc+2'JH5*<r_!13
RfE3`kl?;7\GuPJm/V\;O9#8Orl=g6U&X?WJcGQG_#OCRJH3XhZ2jkorl(K/klB-2JcFs6rc+J/JH41"
r^Hh)[/][rkl?;7\GuPJo`0OCJH5BDr^6\%WrM;`JcE7[rc*JhblF+2r^-V"YlEqfg&HX'i;`drV#Z&H
\cD^prkHbYl2TuJJcE7[rc.l:JH16$g]7=;rk5uEkl?S?YlF]BJH44#JH5ZLr]L1l_Z/j#iW"K/f`1qj
XT3nPTE+sPrjq=niW&-BJcE:\!<<%<JH1B(_>sQqrj^8Rkl?kGW;lj:JH4L+JH4a2r\shbeGnb5l2Q>7
d/X)b[/baXL&h32!O]<8[G(ZF!.k0ds7lWnEIe+L!2ons8H.B%s60NOs.KDkEIe,O!.b-p!<*6&IK&s&
s60ORs+13ks8I#O!.b-$!:Kpe+o]:As60N7s2k<1s8I"h!0mPK!<*B*amB&l!29F[s8I"h!:9c;!4`+/
'`QbRs60OZs+13cs8I#W!.b-$!8[_T+9(Bms60N7s3^l1s8I"h!1a+B!<+SLp\"RN!3-![s8I"h!;->C
!2onsQ1b1A!.k0[s8I#_!.b-$!71`F+9)04s60N7s4RG1s8I"h!2T[H!;-?kTD8HN!3uQ[s8I"h!;unK
!1a,h-iX)As7$*b!.k0[s8I#g!.b-$!5\a8Z2=Rc!.k1/s4IANEIe+l!.b.8!<.EDs60Nos+11Ms8I"l
!.b-5!<-$rs7lZb!.k0[s8I#o!.b-$!4i100Dke6!.k17s3UfFEIe+t!.b.0!<*<(rr2r^!5\\ds7lWn
EK'sL!/CRRiVrlA!.k0[s8I$"!.b-$!3ZD%d/O(0!.k1?s2b6>EIe,'!.b.%!<26^s60O*s+14>s8I#'
!.b-%!!!0'"U4o(rr;3_cN!n8rk\Smr`K.^r`];Irh9>Crr.cSrc.<*JH16$WW<#Equ>m\fDkjHrdatu
rW;<arXSonrcnFFro;T0_#OCRJH3XhJH4*ur_!(fklBH;rm:WtrW(FJrYYW0re19]rp?N]rc+J/JH16$
q>gM4qu;0
~> 0 38 m 0 0 l 192 0 l 192 38 l h W n EOD
klBH;rm:Wtd/a._r_EHGrji$qV#UF6jT'i3JH2tUrbhW5klBZArqubKrWU%:r[%PIrfI,urq>^YaT)6Z
JH3@`JH4C(rfd6ZklBcDrpKbFm/Xs&rWN3Sral)!rmC`C_Z0UTPlQ@8JcGe[!OoQ8s60OGs8MKd1ReCD
$N<0eErN!9h9Q'"EU<aW!.b-M!<1dNs60OJs8MNe1m\46!<*Z28H+);Zi91Es8I"h!6"qh!7_)K"TJ;q
s60OMs8MQf2XCF&!<+&=<;qaR^]*fjs8I#/!.b-$!;uos-2@N)!:Tseo):V"!9aF^!ra\K@/cGjbPq>7
s8I$2!.b-$!2T\p8bi>M!:p0ho):\9!5S[7#Q?X\C]6VN!6kLp!6kNCDYX7r!;6BkoDUl<!.b-$!.b-$
!;-?kP5,(A!;QTno_q")!5JSc!.b-@!<0J&s60O\s8M]j5Eu5"!.b-$!6"s;g\Cg5!<3#tpARAC!.b-$
!.b-$!:U!f"TJ;ns60O_s8JF;!5AMb!.b-;!<+8:s60O\s8I#,!.b-$!.b-c!<,R_s60OYs8I'3!.b-$
!.b-$!9aF^D>!qn!;6BkEe+5;!.b-$!0@3[P4ek>!:p0hF/o:l!.b-$!4W%.[e9[b!:g'is8W(>JH1E)
JH16$huNc2p&F7Vm/R',JH4X/JH16$MZE_ZrqlBgklBuJrcGdQJH16$JH3"VrZq(7klCPZmf39/JH2#:
JH16$gAq4Do)IqSj8]+$JH56@JH16$K)kmfo)IqSi;`e"blE:pJH16$WrW-]o)IqSh>dItJH2VKJH16$
dfBBUo)IqSgAh.rK)gH&JH16$qZ-WLo)IqSfDkhoh>i*,JH16$V?$Surqc3cnGr@beGoMmJH34\JH16$
c2dhgn,MVPdJs2jPQ677JH16$p&P(_n,MVPcN!lhmf7n=JH16$ScJb+n,N1`nGpc4rd'+qaoHtmJH3[i
rfQ[LklAg)rd(C@JH16$JH5*<rjD4pklA^&rd+VFJH16$JH1u9rn?i@klAU#rd01rgAld)JH3LdrWE/r
n,MVP^]4:\[K(jYJH16$klC]-m/Q;MaoD#5rd97sOT9q4OT>ANo`+aeklA9ordB=tli;S:JH34\rbUs$
klA0lrdDfeJH16$JH4X/rfHLHklB-2j8]+-JH2DEJH1N,rjD\(nc++
~> 0 38 m 0 0 l 192 0 l 192 38 l h W n EOD
klA'irdKCul2ZA8JH3LdrjD+mkl@sfrdD`cJH16$JH4p7rn6Z<klAj*jo>=0JH2>CJH1o7rWE/ro`+ae
kl@a`rdTJ!qZ)0IJH3=_rZ^V,kl@X]rd`Q"JH16$JH4a2r^Z5QklB-2eGoMuJH2qTJH1W/rbM?0nc.hR
U&Y+CMu\D/JH3%WrfHCEkl@=Trdj54JH16$JH4I*rj:qiklBE:_uK^fJH3OeJH1?'rn6Q9kl@+Nrdp[@
JH16$Y5nP(rqbmZkl@"Kre'tGJH16$JH4:%rZ^M)klB]BZN'oWJH4.!JH16$!<<-!7csa8!0@0ZKWY<+
!.b-J!<-crs60NGs8;orKn05\!.b-r!</&As60OJs.TJlKn06b!.b-$!;?Km[-%DQ!/COQL;*_>!.b-B
!<1X5s60NOs6K^aL4K>n!.b-m!<**"q<%_A!:g)Ns8Ie)!;->C!.b.@!<+/%s60N7s8DusLX6$P!.b-=
!<,IJs60NWs4[MPLk,Q,!.b-e!<-`ns60OZs+11Ns8W(SL&cc)JH4s8rf?+>kl?;7o`+oIi;eE/JH1i5
rj1Ybkl@^_aoD?sJH3=_JH37]rn-92kl?;7mf39DQN2R:JH4d3rWE/qj8\?DJcG'9reg7HJH16$N<&r$
i;`$AZ2_?6rel=-blE:p[/g1pi;`<Iq#H!Gjo>=<VuVAKJH4L+rbCBkkl?;7ir9";!K;tg!.t9*!<0"V
s60Nos/5nrN.Cuc!.b-S!<*<(o\fcF!:^&?s4mYRNO]%?!.b.&!<,mPs60N7s69RRs8J"/!0dJ7!!!#u
V;;19!5\]$s8J%0!:Ko=!36,!#QF;Ms60N7s3q#INlh?Q!.b.!!<,^Hs60N7s7--Is8J(1!2T[H!<)ut
!WK^bs60O*s+ULPO+@92!.b-I!<.K*s7u]Z!.k0ms8J,7!.b-$!7:fG8,iJ=s60N7s7u]@s8J+2!4DlY
!;lir+9(WVs60O2s+14Bs8JGc$'YF@!2fhr#QDp*s7-,>
~> 0 38 m 0 32 l 192 32 l 192 38 l h W n EOD
kl?;7`;fh)rX%?[JH16$hZ3W\rl`^hkl?;7nc.#:rn792JH3.ZM?*VhriFEFklAj*JcGHDrr)hRrWnbh
JH3(Xra>`ke,T7Dkl?;7\GuQZr\j6GJH16$irK'-rkZSRkl?;7q>\/.rqubWr\B$)c2`t,rZM2orqaM3
klB-2JcFO*ro3p@r`K.`rZqIM\,_'[b5hMIr\XUarf[8trp\&0JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$nc++
~> restore
Q
q
1079.4445 591 m
1054.8889 591 1035 581.05554 1035 568.77777 c
1035 556.5 1054.8889 546.55554 1079.4445 546.55554 c
1104 546.55554 1123.8889 556.5 1123.8889 568.77777 c
1123.8889 581.05554 1104 591 1079.4445 591 c
1079.4445 591 l
h
1035 557.66669 m
1035 541 l
1035 528.72223 1054.8889 518.77777 1079.4445 518.77777 c
1104 518.77777 1123.8889 528.72223 1123.8889 541 c
1123.8889 557.66669 l
1123.8889 545.38892 1104 535.44446 1079.4445 535.44446 c
1054.8889 535.44446 1035 545.38892 1035 557.66669 c
1035 557.66669 l
h
1035 529.88892 m
1035 513.22223 l
1035 500.94446 1054.8889 491 1079.4445 491 c
1104 491 1123.8889 500.94446 1123.8889 513.22223 c
1123.8889 529.88892 l
1123.8889 517.61108 1104 507.66666 1079.4445 507.66666 c
1054.8889 507.66666 1035 517.61108 1035 529.88892 c
h
W
0 0 1130 591 rc
1030 596 m
1128.8889 596 l
1128.8889 486 l
1030 486 l
h
f
Q
q
218.4827 545.46716 m
227.5 541.00195 l
218.51744 536.46722 l
218.50101 540.46802 l
97.001938 539.99805 l
96.99807 540.99805 l
218.498 541.46802 l
218.4827 545.46716 l
h
W
0 0 1130 591 rc
91.99807 550.46716 m
232.5 550.46716 l
232.5 531.46722 l
91.99807 531.46722 l
h
f
Q
q
517.97833 545.95886 m
527 541.50244 l
518.02185 536.95898 l
518.00201 540.95898 l
319.00241 539.99762 l
318.99759 540.99756 l
517.99701 541.95801 l
517.97833 545.95886 l
h
W
0 0 1130 591 rc
313.99759 550.95886 m
532 550.95886 l
532 531.95898 l
313.99759 531.95898 l
h
f
Q
2 J
q
0 0 1130 591 rc
1 0 0 -1 572.59259 483 cm
0 0 m
0 34.666668 0 52 0 52 c
0 52 70 52 210 52 c
210 0 l
S
Q
q
678.00739 431.00729 m
679.00732 430.99258 l
678.125 370.992 l
682.12451 370.93292 l
677.49268 362.00006 l
673.12549 371.06525 l
677.125 371.00699 l
678.00739 431.00729 l
h
W
0 0 1130 591 rc
668.12549 436.00729 m
687.12451 436.00729 l
687.12451 357.00006 l
668.12549 357.00006 l
h
f
Q
q
521 93 m
521 89 l
629 89 l
629 88 l
521 88 l
521 84 l
512 88.5 l
521 93 l
h
W
0 0 1130 591 rc
507 98 m
634 98 l
634 79 l
507 79 l
h
f
Q
q
841 539 m
841 535 l
1028 535 l
1028 534 l
841 534 l
841 530 l
832 534.5 l
841 539 l
h
W
0 0 1130 591 rc
827 544 m
1033 544 l
1033 525 l
827 525 l
h
f
Q
q
844 93 m
853 88.5 l
844 84 l
844 88 l
733 88 l
733 89 l
844 89 l
844 93 l
h
W
0 0 1130 591 rc
728 98 m
858 98 l
858 79 l
728 79 l
h
f
Q
q
677.99591 263.00409 m
678.92999 149.004 l
682.93018 149.03661 l
678.50409 140.00002 l
673.93048 148.96283 l
677.92999 148.996 l
676.99591 262.99588 l
677.99591 263.00409 l
h
W
0 0 1130 591 rc
668.93048 268.00409 m
687.93018 268.00409 l
687.93018 135.00002 l
668.93048 135.00002 l
h
f
Q
q
0 0 1130 591 rc
1 0 0 -1 -1 478 cm
/F1.1[ 12 0 0 -12 0 0]sf
0.15234375 11 m
(!"#$%&'\(#$\)*\("%+&\(,)[ 8.666016 6.000000 6.673828 3.996094 3.333984 2.666016 6.673828 3.333984 6.673828 3.996094 6.673828 6.000000 3.333984 6.000000 3.333984 8.666016 2.666016 3.333984 0.000000 ] xS
21.483398 25 m
(\(,#%"#'"-$)[ 3.333984 6.673828 6.673828 3.333984 6.000000 6.673828 6.673828 6.000000 6.673828 0.000000 ] xS
1 0 0 -1 223 481 cm
0.31542969 11 m
(.&-/#\($&*%\(#/01\)\(#)[ 8.003906 2.666016 6.673828 9.996094 6.673828 3.333984 3.996094 2.666016 6.000000 3.333984 3.333984 6.673828 9.996094 6.673828 2.666016 6.673828 3.333984 0.000000 ] xS
19.320312 25 m
(&"%#2\($\)*\(#3)[ 2.666016 6.000000 3.333984 6.673828 6.000000 3.333984 3.996094 6.673828 6.000000 3.333984 6.673828 0.000000 ] xS
1 0 0 -1 359 560 cm
0.13769531 11 m
(4#/01\)\(#%\($\)'"5-$/\)\(&-')[ 6.000000 6.673828 9.996094 6.673828 2.666016 6.673828 3.333984 6.673828 3.333984 3.333984 3.996094 6.673828 6.673828 6.000000 3.333984 6.673828 3.996094 9.996094 6.673828 3.333984 2.666016 6.673828 0.000000 ] xS
1 0 0 -1 860 553 cm
0.12890625 11 m
(62\($\)*\(&-'%-5%"\(-$#3%\(#/01\)\(#)[ 8.003906 6.000000 3.333984 3.996094 6.673828 6.000000 3.333984 2.666016 6.673828 6.673828 3.333984 6.673828 3.333984 3.333984 6.000000 3.333984 6.673828 3.996094 6.673828 6.673828 3.333984 3.333984 6.673828 9.996094 6.673828 2.666016 6.673828 3.333984 0.000000 ] xS
1 0 0 -1 728 337 cm
39.15332 11 m
(7-/0\)$&"-')[ 8.666016 6.673828 9.996094 6.673828 6.673828 3.996094 2.666016 6.000000 6.673828 0.000000 ] xS
0.12402344 25 m
(-5%8-\(,%\(#/01\)\(#"9%3#*&"&-')[ 6.673828 3.333984 3.333984 6.673828 6.673828 3.333984 6.673828 3.333984 3.333984 6.673828 9.996094 6.673828 2.666016 6.673828 3.333984 6.673828 6.000000 3.333984 3.333984 6.673828 6.673828 6.000000 2.666016 6.000000 2.666016 6.673828 0.000000 ] xS
4.4511719 39 m
(8\)"#3%-'%\(,$#",-13%:\)1;#)[ 6.673828 6.673828 6.000000 6.673828 6.673828 3.333984 6.673828 6.673828 3.333984 3.333984 6.673828 3.996094 6.673828 6.000000 6.673828 6.673828 2.666016 6.673828 3.333984 6.000000 6.673828 2.666016 6.673828 0.000000 ] xS
1 0 0 -1 378.5 28 cm
2.4736328 11 m
(</0-"\(#$%3#\(#*\(#3)[ 3.333984 9.996094 6.673828 6.673828 6.000000 3.333984 6.673828 3.996094 3.333984 6.673828 6.673828 3.333984 6.673828 6.000000 3.333984 6.673828 0.000000 ] xS
0.46386719 25 m
(\)'3%\)**#""%3#'&#3)[ 6.673828 6.673828 6.673828 3.333984 6.673828 6.000000 6.000000 6.673828 6.000000 6.000000 3.333984 6.673828 6.673828 6.673828 2.666016 6.673828 0.000000 ] xS
1 0 0 -1 847.5 28 cm
14.147461 11 m
(!"#$%&3#'\(&=#3)[ 8.666016 6.000000 6.673828 3.996094 3.333984 2.666016 6.673828 6.673828 6.673828 3.333984 2.666016 6.000000 6.673828 0.000000 ] xS
0.13183594 25 m
(\)'3%\)**#""%>$\)'\(#3)[ 6.673828 6.673828 6.673828 3.333984 6.673828 6.000000 6.000000 6.673828 6.000000 6.000000 3.333984 6.673828 3.996094 6.673828 6.673828 3.333984 6.673828 0.000000 ] xS
1 0 0 -1 1028 486 cm
0.29882812 11 m
(4#/01\)\(#%3\)\(\)8\)"#)[ 6.000000 6.673828 9.996094 6.673828 2.666016 6.673828 3.333984 6.673828 3.333984 6.673828 6.673828 3.333984 6.673828 6.673828 6.673828 6.000000 0.000000 ] xS
ep
end
